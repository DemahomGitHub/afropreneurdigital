{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/content/about/about.component.ts","webpack:///src/app/pages/content/about/about.component.html","webpack:///src/app/pages/content/admin/article-creation/article-creation.component.ts","webpack:///src/app/pages/content/admin/article-creation/article-creation.component.html","webpack:///src/app/pages/content/admin/article-update-deletion/article-update-deletion.component.ts","webpack:///src/app/pages/content/admin/article-update-deletion/article-update-deletion.component.html","webpack:///src/app/pages/content/admin/login/login.component.ts","webpack:///src/app/pages/content/admin/login/login.component.html","webpack:///src/app/pages/content/article-details/article-details.component.ts","webpack:///src/app/pages/content/article-details/article-details.component.html","webpack:///src/app/pages/content/articles/articles.component.ts","webpack:///src/app/pages/content/articles/articles.component.html","webpack:///src/app/pages/content/contact/contact.component.ts","webpack:///src/app/pages/content/contact/contact.component.html","webpack:///src/app/pages/content/main-content/main-content.component.ts","webpack:///src/app/pages/content/main-content/main-content.component.html","webpack:///src/app/pages/header/header.component.ts","webpack:///src/app/pages/header/header.component.html","webpack:///src/app/pages/menu/menu.component.ts","webpack:///src/app/pages/menu/menu.component.html","webpack:///src/app/services/AppServices.ts","webpack:///src/app/services/ArticlesServices.ts","webpack:///src/app/services/AuthenticationServices.ts","webpack:///src/app/services/CanActivateAdmin.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","appServices","authenticationServices","router","leftMenuOpened","isAdminConsole","getMobileDevicesMenuObserver","subscribe","opened","getOpenAdminConsoleSubjectObserver","admin","getAdmin","console","log","logout","connected","navigate","ok","enableAdminConsole","err","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AboutComponent","ArticleCreationComponent","fb","titleControl","required","contentControl","minLength","hideRequiredControl","floatLabelControl","connectionResponse","mobileFormStyle","width","desktopFormStyle","formOptions","group","hideRequired","floatLabel","observeMobileDevices","results","formStyle","matches","hasError","title","value","content","onSubmit","ArticleUpdateDeletionComponent","articlesServices","formBuilder","titleChanged","contentChange","switchToAdminConsole","allArticles","findAll","length","articleToUpdate","valueChanges","forEach","a","newTitle","newContent","updateIndex","findIndex","Object","assign","releaseDate","author","topics","LoginComponent","mobileDeviceObserver","loginControl","passwordControl","hide","observe","Handset","Tablet","WebPortrait","login","password","invalid","response","status","message","setLoggedIn","setAdmin","data","ArticleDetailsComponent","activatedRoute","params","articleDetails","findArticleById","ArticlesComponent","observeWebLandscape","res","cols","rowHeight","observeTablet","observePhone","articles","sortArticlesByDateDescending","ContactComponent","emailControl","email","messageControl","MainContentComponent","smallScreen","TabletPortrait","HeaderComponent","toolbarMenuOpened","undefined","mobileDeviceMenuOpened","events","openMenuForMobileDevices","MenuComponent","switchToAdminDashboard","getAuthServiceMessage","canSwitch","user","AppServices","phoneObserver","tabletObserver","webLandscapeObserver","openAdminConsoleSubject","mobileDevicesMenuSubject","asObservable","enable","next","WebLandscape","providedIn","ArticlesServices","http","API_ARTICLE_URL","shift","sort","b","da","Date","parse","db","find","article","AuthenticationServices","authServiceMessage","loggedIn","BASE_URL","get","newAdmin","logged","CanActivateAdmin","route","state","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ArticlesComponent} from './pages/content/articles/articles.component';\nimport {AboutComponent} from './pages/content/about/about.component';\nimport {LoginComponent} from './pages/content/admin/login/login.component';\nimport {ArticleCreationComponent} from './pages/content/admin/article-creation/article-creation.component';\nimport {ArticleUpdateDeletionComponent} from './pages/content/admin/article-update-deletion/article-update-deletion.component';\nimport {CanActivateAdmin} from './services/CanActivateAdmin';\nimport {ArticleDetailsComponent} from './pages/content/article-details/article-details.component';\nimport {ContactComponent} from './pages/content/contact/contact.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'articles', pathMatch: 'full' },\n  { path: 'articles', component: ArticlesComponent },\n  { path: 'articles/:id', component: ArticleDetailsComponent },\n  { path: 'infos', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'admin/login', component: LoginComponent },\n  { path: 'admin/articles/add', component: ArticleCreationComponent, canActivate: [CanActivateAdmin] },\n  { path: 'admin/articles/all', component: ArticleUpdateDeletionComponent, canActivate: [CanActivateAdmin] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServices} from './services/AuthenticationServices';\nimport {AppServices} from './services/AppServices';\nimport {User} from './model/User';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  leftMenuOpened = false;\n  isAdminConsole = false;\n  admin: User;\n\n  constructor(\n    private appServices: AppServices,\n    private authenticationServices: AuthenticationServices,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.appServices\n        .getMobileDevicesMenuObserver()\n        .subscribe(opened => {\n            this.leftMenuOpened = opened;\n        });\n    this.appServices\n        .getOpenAdminConsoleSubjectObserver()\n        .subscribe(opened => {\n          this.isAdminConsole = opened;\n          this.admin = this.authenticationServices.getAdmin();\n          if (opened) {\n            console.log('Admin Console Opened');\n          } else {\n          }\n        });\n  }\n\n  onMenuClosed() {\n    this.leftMenuOpened = !this.leftMenuOpened;\n  }\n\n  onDisconnect() {\n    console.log('Disconnecting from the admin');\n    this.authenticationServices.logout();\n    if (!this.authenticationServices.connected()) {\n      this.router\n        .navigate(['/admin/login'])\n        .then(ok => {\n          this.appServices.enableAdminConsole(false);\n          console.log('Admin console closed', ok);\n        })\n        .catch(err => {\n          console.log('Something went wrong while trying to close the admin console');\n          console.log('Error message: ', err);\n        });\n    }\n  }\n}\n","<div id=\"myApp\">\n  <mat-drawer-container *ngIf=\"!isAdminConsole\">\n    <mat-drawer class=\"mobile-devices-left-menu\" [opened]=\"leftMenuOpened\" mode=\"over\">\n      <mat-list>\n        <div mat-subheader style=\"width: 100%; color: white;\">\n          <span style=\"width: 50%; text-align: left;\">Menu</span>\n          <span style=\"width: 50%; text-align: right;\">\n          <button mat-button (click)=\"onMenuClosed()\">\n            <mat-icon>close</mat-icon>\n          </button>\n        </span>\n        </div>\n        <mat-list-item routerLink=\"/articles\"\n                       routerLinkActive=\"menu-link-active\"\n                       class=\"mat-list-web-item\"\n                       [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"onMenuClosed()\">\n          <mat-icon mat-list-icon>home</mat-icon>\n          <div mat-line> Articles </div>\n        </mat-list-item>\n        <mat-list-item routerLink=\"/infos\" routerLinkActive=\"menu-link-active\" (click)=\"onMenuClosed()\" class=\"mat-list-web-item\">\n          <mat-icon mat-list-icon>info</mat-icon>\n          <div mat-line> A propos </div>\n        </mat-list-item>\n        <mat-list-item routerLink=\"/contact\" routerLinkActive=\"menu-link-active\" (click)=\"onMenuClosed()\" class=\"mat-list-web-item\">\n          <mat-icon mat-list-icon>mail</mat-icon>\n          <div mat-line> Contact </div>\n        </mat-list-item>\n      </mat-list>\n    </mat-drawer>\n    <mat-drawer-content>\n      <app-header [mobileDeviceMenuOpened]=\"leftMenuOpened\"></app-header>\n      <app-main-content></app-main-content>\n    </mat-drawer-content>\n  </mat-drawer-container>\n\n  <div *ngIf=\"isAdminConsole\">\n    <app-header [mobileDeviceMenuOpened]=\"leftMenuOpened\"></app-header>\n    <mat-drawer-container style=\"height: 100vh;\">\n      <mat-drawer [opened]=\"true\" mode=\"side\" class=\"desktop-devices-left-menu\">\n        <mat-list>\n          <div mat-subheader style=\"width: 100%; color: black;\">Console d'administration</div>\n          <mat-list-item routerLink=\"/admin/articles/add\" class=\"mat-list-admin-item\"\n                         routerLinkActive=\"link-active\" [routerLinkActiveOptions]=\"{exact: true}\">\n            <mat-icon mat-list-icon>article</mat-icon>\n            <div mat-line> Nouvel article </div>\n          </mat-list-item>\n          <mat-list-item routerLink=\"/admin/articles/all\" class=\"mat-list-admin-item\"\n                         routerLinkActive=\"link-active\" [routerLinkActiveOptions]=\"{exact: true}\">\n            <mat-icon mat-list-icon>update</mat-icon>\n            <div mat-line> Modifier article </div>\n          </mat-list-item>\n        </mat-list>\n        <ul class=\"admin-page-user-infos\">\n          <li>{{admin.fullName}}</li>\n          <li>\n            <a mat-button (click)=\"onDisconnect()\">Déconnexion</a>\n          </li>\n        </ul>\n      </mat-drawer>\n      <mat-drawer-content>\n        <router-outlet></router-outlet>\n      </mat-drawer-content>\n    </mat-drawer-container>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './pages/header/header.component';\nimport { MenuComponent } from './pages/menu/menu.component';\nimport { MainContentComponent } from './pages/content/main-content/main-content.component';\nimport { AboutComponent } from './pages/content/about/about.component';\nimport { ArticlesComponent } from './pages/content/articles/articles.component';\nimport { LoginComponent } from './pages/content/admin/login/login.component';\nimport { ArticleCreationComponent } from './pages/content/admin/article-creation/article-creation.component';\nimport { ArticleUpdateDeletionComponent } from './pages/content/admin/article-update-deletion/article-update-deletion.component';\nimport { ArticleDetailsComponent } from './pages/content/article-details/article-details.component';\nimport { ContactComponent } from './pages/content/contact/contact.component';\nimport {MatTableModule} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MenuComponent,\n    MainContentComponent,\n    AboutComponent,\n    ArticlesComponent,\n    LoginComponent,\n    ArticleCreationComponent,\n    ArticleUpdateDeletionComponent,\n    ArticleDetailsComponent,\n    ContactComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatCardModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatDividerModule,\n        MatGridListModule,\n        MatInputModule,\n        MatTabsModule,\n        MatExpansionModule,\n        FormsModule,\n        HttpClientModule,\n        MatTableModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css', '../main-content/main-content.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div style=\"height: 100vh;\">\n  <div style=\"text-align: center;\">\n    <h2> A propos de ce blog </h2>\n  </div>\n  <mat-divider></mat-divider>\n <div style=\"background-color: white; width: 100%; margin-top: 3%;\">\n   <mat-card>\n     <p>\n       Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n       Nulla quam velit, vulputate eu pharetra nec, mattis ac neque.\n       Duis vulputate commodo lectus, ac blandit elit tincidunt id.\n       Sed rhoncus, tortor sed eleifend tristique, tortor mauris molestie elit, et lacinia ipsum quam nec dui.\n       Quisque nec mauris sit amet elit iaculis pretium sit amet quis magna. Aenean velit odio, elementum in tempus ut, vehicula eu diam.\n       Pellentesque rhoncus aliquam mattis. Ut vulputate eros sed felis sodales nec vulputate justo hendrerit.\n       Vivamus varius pretium ligula, a aliquam odio euismod sit amet.\n       Quisque laoreet sem sit amet orci ullamcorper at ultricies metus viverra.\n       Pellentesque arcu mauris, malesuada quis ornare accumsan, blandit sed diam.\n     </p>\n   </mat-card>\n </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationServices} from '../../../../services/AuthenticationServices';\nimport {AppServices} from '../../../../services/AppServices';\n\n@Component({\n  selector: 'app-article-creation',\n  templateUrl: './article-creation.component.html',\n  styleUrls: ['./article-creation.component.css', '../../main-content/main-content.component.css', '../../../../app.component.css']\n})\nexport class ArticleCreationComponent implements OnInit {\n  titleControl = new FormControl('', [Validators.required]);\n  contentControl = new FormControl('', [Validators.required, Validators.minLength(10)]);\n  formOptions: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n  formStyle: {width: string; 'margin-left': string; 'margin-top': string};\n  connected = false;\n  connectionResponse = '';\n  private mobileFormStyle = {width: '90%', 'margin-left': '5%', 'margin-top': '2%'};\n  private desktopFormStyle = {width: '80%', 'margin-left': '10%', 'margin-top': '2%'};\n\n  constructor(\n    private fb: FormBuilder,\n    private authenticationServices: AuthenticationServices,\n    private appServices: AppServices\n  ) {\n    this.formOptions = fb.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl\n    });\n    appServices.observeMobileDevices().subscribe(results => {\n      this.formStyle = results.matches ? this.mobileFormStyle : this.desktopFormStyle;\n    });\n  }\n  ngOnInit() {\n    // this.authenticationServices.switchToAdminConsole(true);\n  }\n\n  handleLoginErrors() {\n    if (this.titleControl.hasError('required')) {\n      return 'Le titre est obligatoire';\n    }\n    return '';\n  }\n\n  handlePasswordErrors() {\n    if (this.contentControl.hasError('required')) {\n      return 'Contenu obligatoire';\n    }\n    return '';\n  }\n\n  onSubmit() {\n    const title = this.titleControl.value;\n    const content = this.contentControl.value;\n\n    console.log(title);\n    console.log(content);\n  }\n\n}\n","<mat-tab-group animationDuration=\"0ms\" style=\"height: 100vh;\">\n  <mat-tab label=\"Creation\">\n    <form [formGroup]=\"formOptions\" (ngSubmit)=\"onSubmit()\" [ngStyle]=\"formStyle\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title>Ecrire un nouvel article</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-form-field appearance=\"outline\" class=\"blog-admin-creation-form-field\">\n            <mat-label>Intitulé de l'article</mat-label>\n            <input matInput\n                   placeholder=\"Saisir le titre de l'article\"\n                   [formControl]=\"titleControl\"\n                   autocomplete=\"title\"\n                   required>\n            <mat-error *ngIf=\"titleControl.invalid\">{{handleLoginErrors()}}</mat-error>\n          </mat-form-field>\n          <br>\n          <mat-form-field appearance=\"outline\" class=\"blog-admin-creation-form-field\">\n            <mat-label>Contenu de l'article</mat-label>\n            <textarea matInput rows=\"20\"\n                      placeholder=\"Ecrire le contenu de l'article ici\"\n                      [formControl]=\"contentControl\"\n                      autocomplete=\"content\"\n                      required>\n            </textarea>\n            <mat-error *ngIf=\"contentControl.invalid\">{{handlePasswordErrors()}}</mat-error>\n          </mat-form-field>\n        </mat-card-content>\n        <mat-card-actions>\n          <button type=\"submit\" mat-raised-button\n                  class=\"button-primary-color\">\n            Soumettre\n          </button>\n        </mat-card-actions>\n        <mat-error *ngIf=\"!connected\" style=\"text-align: center;\">{{connectionResponse}}</mat-error>\n      </mat-card>\n    </form>\n  </mat-tab>\n  <mat-tab label=\"Prévisualisation\">\n    <mat-card [ngStyle]=\"formStyle\" *ngIf=\"titleControl.valid || contentControl.valid\">\n      <mat-card-header>\n        <mat-card-title *ngIf=\"titleControl.valid\">\n          {{titleControl.value}}\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content *ngIf=\"contentControl.valid\" [innerHTML]=\"contentControl.value\"></mat-card-content>\n    </mat-card>\n  </mat-tab>\n</mat-tab-group>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationServices} from '../../../../services/AuthenticationServices';\nimport {ArticlesServices} from '../../../../services/ArticlesServices';\nimport {Article} from '../../../../model/Article';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-article-update-deletion',\n  templateUrl: './article-update-deletion.component.html',\n  styleUrls: ['./article-update-deletion.component.css', '../../main-content/main-content.component.css', '../../../../app.component.css']\n})\nexport class ArticleUpdateDeletionComponent implements OnInit {\n  public allArticles: Article[];\n  articleToUpdate: Article;\n  titleControl = new FormControl('');\n  titleChanged = false;\n  contentControl = new FormControl('');\n  contentChange = false;\n  formOptions: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n\n  constructor(\n    private authenticationServices: AuthenticationServices,\n    private articlesServices: ArticlesServices,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.authenticationServices.switchToAdminConsole(true);\n    this.allArticles = this.articlesServices.findAll();\n    if (this.allArticles.length > 0) {\n      this.articleToUpdate = this.allArticles[0];\n    }\n    this.formOptions = this.formBuilder.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl\n    });\n    this.titleControl.valueChanges.subscribe(value => {\n      this.titleChanged = true;\n    });\n    this.contentControl.valueChanges.subscribe(value => {\n      this.contentChange = true;\n    });\n  }\n\n  onSelect(id: number) {\n    this.allArticles.forEach((a) => {\n      if (a.id === id) {\n        this.articleToUpdate = a;\n      }\n    });\n  }\n\n  onUpdate() {\n    const newTitle = this.titleChanged ? this.titleControl.value : this.articleToUpdate.title;\n    const newContent = this.contentChange ? this.contentControl.value : this.articleToUpdate.content;\n    const updateIndex = this.allArticles.findIndex((a) => a.id === this.articleToUpdate.id);\n    Object.assign(this.allArticles[updateIndex], {\n      id: this.articleToUpdate.id,\n      title: newTitle,\n      releaseDate: this.articleToUpdate.releaseDate,\n      author: this.articleToUpdate.author,\n      topics: this.articleToUpdate.topics,\n      content: newContent\n    });\n  }\n\n}\n","<div class=\"ad-page-content\">\n  <div style=\"text-align: center;\">\n    <h2> Mettre à jour un articles </h2>\n  </div>\n  <mat-divider></mat-divider>\n\n  <div *ngIf=\"allArticles.length > 0\" style=\"margin-top: 3%;\">\n    <mat-card class=\"content-article-update-form\">\n      <form [formGroup]=\"formOptions\" (ngSubmit)=\"onUpdate()\">\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n          <mat-label>Titre</mat-label>\n          <input matInput\n                 [formControl]=\"titleControl\"\n                 autocomplete=\"on\"\n                 value=\"{{articleToUpdate.title}}\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n          <mat-label>Contenu</mat-label>\n          <textarea rows=\"30\"\n                    matInput\n                    [formControl]=\"contentControl\"\n                    value=\"{{articleToUpdate.content}}\"\n                    autocomplete=\"on\">\n          </textarea>\n        </mat-form-field>\n        <button [disabled]=\"!(titleChanged || contentChange)\"\n                type=\"submit\"\n                mat-raised-button\n                class=\"button-primary-color\">\n          Mettre à jour\n        </button>\n      </form>\n    </mat-card>\n  </div>\n\n  <div>\n    <mat-card class=\"content-articles-list\"\n              tabindex=\"0\"\n              role=\"region\"\n              *ngFor=\"let article of allArticles\" (click)=\"onSelect(article.id)\">\n      <mat-card-title>{{article.title}}</mat-card-title>\n      <mat-card-content>\n        {{article.content | slice: 0 : 80 }} ...\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationServices} from '../../../../services/AuthenticationServices';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Router} from '@angular/router';\nimport {AppServices} from '../../../../services/AppServices';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', '../../../../app.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginControl = new FormControl('', [Validators.required]);\n  passwordControl = new FormControl('', [Validators.required, Validators.minLength(1)]);\n  hide = true;\n  formOptions: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n  formStyle: {width: string; 'margin-left': string; 'margin-top': string};\n  connected = false;\n  connectionResponse = '';\n  private mobileFormStyle = {width: '90%', 'margin-left': '5%', 'margin-top': '10%'};\n  private desktopFormStyle = {width: '45%', 'margin-left': '30%', 'margin-top': '10%'};\n\n  constructor(\n    private fb: FormBuilder,\n    private authenticationServices: AuthenticationServices,\n    private mobileDeviceObserver: BreakpointObserver,\n    private router: Router,\n    private appServices: AppServices\n  ) {\n    this.formOptions = fb.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl\n    });\n    mobileDeviceObserver\n      .observe([Breakpoints.Handset, Breakpoints.Tablet, Breakpoints.WebPortrait])\n      .subscribe(results => {\n        if (results.matches) {\n          this.formStyle = this.mobileFormStyle;\n        } else {\n          this.formStyle = this.desktopFormStyle;\n        }\n      });\n  }\n  ngOnInit() {\n    this.authenticationServices.switchToAdminConsole(this.connected);\n  }\n\n  handleLoginErrors() {\n    if (this.loginControl.hasError('required')) {\n      return 'Identifiant obligatoire';\n    }\n    return '';\n  }\n\n  handlePasswordErrors() {\n    if (this.passwordControl.hasError('required')) {\n      return 'Mot de passe est obligatoire';\n    }\n    if (this.passwordControl.hasError('minlength')) {\n      return 'Mot de passe très court';\n    }\n    return '';\n  }\n\n  onSubmit() {\n    const login = this.loginControl.value;\n    const password = this.passwordControl.value;\n\n    if (!this.loginControl.invalid && !this.passwordControl.invalid) {\n      this.authenticationServices\n          .login(login, password)\n          .subscribe(response => {\n            if (response.status === 'OK') {\n              this.connected = true;\n              this.connectionResponse = response.message;\n              this.authenticationServices.setLoggedIn(this.connected);\n              this.authenticationServices.setAdmin(response.data);\n              this.router\n                .navigate(['/admin', 'articles', 'add'])\n                .then(ok => {\n                  console.log('Open console ?', ok);\n                  if (ok) {\n                    this.appServices.enableAdminConsole(ok);\n                    console.log('Opening admin console');\n                  } else {\n                    console.log('Unable to open the admin console');\n                  }\n                })\n                .catch(err => {\n                  console.log('Something went wrong: ' + err);\n                });\n            } else {\n              this.connected = false;\n              this.connectionResponse = response.message;\n            }\n          });\n    }\n  }\n}\n","<form [formGroup]=\"formOptions\" (ngSubmit)=\"onSubmit()\" [ngStyle]=\"formStyle\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Console d'administration</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <mat-form-field appearance=\"standard\" class=\"blog-admin-login-form-field\">\n        <mat-label>Login</mat-label>\n        <input matInput\n               placeholder=\"Saisir l'identifiant\"\n               [formControl]=\"loginControl\"\n               autocomplete=\"username\"\n               required>\n        <mat-error *ngIf=\"loginControl.invalid\">{{handleLoginErrors()}}</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"standard\" class=\"blog-admin-login-form-field\">\n        <mat-label>Mot de passe</mat-label>\n        <input matInput\n               placeholder=\"Saisir le mot de passe\"\n               [type]=\"hide ? 'password' : 'text'\"\n               [formControl]=\"passwordControl\"\n               autocomplete=\"current-password\"\n               required>\n        <mat-error *ngIf=\"passwordControl.invalid\">{{handlePasswordErrors()}}</mat-error>\n        <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Cachez le mot de pass'\" [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions>\n      <button type=\"submit\" mat-raised-button\n              class=\"button-primary-color\">\n        Connexion\n      </button>\n    </mat-card-actions>\n    <mat-error *ngIf=\"!connected\" style=\"text-align: center;\">{{connectionResponse}}</mat-error>\n  </mat-card>\n</form>\n","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {ArticlesServices} from '../../../services/ArticlesServices';\nimport {Article} from '../../../model/Article';\n\n@Component({\n  selector: 'app-article-details',\n  templateUrl: './article-details.component.html',\n  styleUrls: ['./article-details.component.css']\n})\nexport class ArticleDetailsComponent implements OnInit {\n  articleDetails: Article;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private articlesServices: ArticlesServices\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.articleDetails = this.articlesServices.findArticleById(+params.id);\n    });\n  }\n\n}\n","<div style=\"height: 100vh;\">\n  <mat-card style=\"margin: 25px 0;\">\n    <ul class=\"breadcrumb\">\n      <li><a routerLink=\"/articles\"> Articles </a></li>\n      <li>{{articleDetails.title}}</li>\n    </ul>\n  </mat-card>\n  <mat-card class=\"ad-card-article\">\n    <mat-card-title> {{articleDetails.title}} </mat-card-title>\n    <mat-card-subtitle>\n      <span> Publié le {{articleDetails.releaseDate}} par {{articleDetails.author}} - Thématiques: </span>\n      <span *ngFor=\"let topic of articleDetails.topics\"> {{topic.label}} </span>\n    </mat-card-subtitle>\n    <mat-card-content>\n      {{articleDetails.content}}\n    </mat-card-content>\n    <mat-card-actions>\n      <a mat-button routerLink=\"/articles\">\n        <mat-icon mat-list-icon>arrow_back</mat-icon>\n        <span> Retour </span>\n      </a>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import {ActivatedRoute, Router} from '@angular/router';\nimport {Component, OnInit} from '@angular/core';\nimport {ArticlesServices} from '../../../services/ArticlesServices';\nimport {Article} from '../../../model/Article';\nimport {AuthenticationServices} from '../../../services/AuthenticationServices';\nimport {AppServices} from '../../../services/AppServices';\n\n@Component({\n  selector: 'app-articles',\n  templateUrl: './articles.component.html',\n  styleUrls: ['./articles.component.css', '../main-content/main-content.component.css']\n})\nexport class ArticlesComponent implements OnInit {\n  articles: Article[];\n  cols: number;\n  rowHeight: string;\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private articlesServices: ArticlesServices,\n    private appServices: AppServices\n  ) {\n    appServices.observeWebLandscape().subscribe(res => {\n      if (res.matches) {\n        this.cols = 3;\n        this.rowHeight = '1:1';\n      }\n    });\n    appServices.observeTablet().subscribe(res => {\n      if (res.matches) {\n        this.cols = 2;\n        this.rowHeight = '9:10';\n      }\n    });\n    appServices.observePhone().subscribe(res => {\n      if (res.matches) {\n        this.cols = 1;\n        this.rowHeight = '9:10';\n      }\n    });\n  }\n  ngOnInit() {\n    this.articles = this.articlesServices.findAll();\n    this.articles = this.articlesServices.sortArticlesByDateDescending(this.articles);\n  }\n}\n","<div style=\"height: 100vh;\">\n  <h2 style=\"text-align: center;\"> Les derniers articles</h2>\n  <mat-divider></mat-divider>\n  <div style=\"margin-top: 3%;\">\n    <mat-grid-list cols=\"{{cols}}\" rowHeight=\"{{rowHeight}}\">\n      <mat-grid-tile  *ngFor=\"let article of articles\">\n        <mat-card style=\"width: 90%; height: 90%;\">\n          <mat-card-title> {{article.title}} </mat-card-title>\n          <mat-card-subtitle>\n            <span> par {{article.author}} le {{article.releaseDate}} | </span>\n            <span *ngFor=\"let topic of article.topics\"> {{topic.label}} </span>\n          </mat-card-subtitle>\n          <mat-card-content>\n            <p> {{article.content | slice: 0 : 240 }} ... </p>\n          </mat-card-content>\n          <mat-card-actions>\n            <a mat-button [routerLink]=\"['/articles', article.id]\"> Lire l'article </a>\n          </mat-card-actions>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {AppServices} from '../../../services/AppServices';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css', '../../../app.component.css']\n})\nexport class ContactComponent implements OnInit {\n  emailControl = new FormControl('', [Validators.required, Validators.email]);\n  messageControl = new FormControl('', [Validators.required, Validators.minLength(10)]);\n  hide = true;\n  formOptions: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n  formStyle: {width: string; 'margin-top': string};\n  private mobileFormStyle = {width: '100%', 'margin-top': '3%'};\n  private desktopFormStyle = {width: '100%',  'margin-top': '3%'};\n\n  constructor(private fb: FormBuilder, private appServices: AppServices) {\n    this.formOptions = fb.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl\n    });\n    appServices\n      .observeMobileDevices()\n      .subscribe(results => {\n        this.formStyle = results.matches ? this.mobileFormStyle : this.desktopFormStyle;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log(this.emailControl.value);\n  }\n\n  handleEmailError() {\n    if (this.emailControl.hasError('required')) {\n      return 'Email obligatoire';\n    }\n    if (this.emailControl.hasError('email')) {\n      return 'Format email non valide';\n    }\n    return '';\n  }\n  handleMessageError() {\n    if (this.messageControl.hasError('required')) {\n      return 'Le message est obligatoire';\n    }\n    if (this.messageControl.hasError('minLength')) {\n      return 'Votre message est trop court. Dites-nous en un peu plus!';\n    }\n    return '';\n  }\n}\n","<div style=\"height: 100vh;\">\n  <div style=\"text-align: center;\">\n    <h2>Page de contact</h2>\n  </div>\n  <mat-divider></mat-divider>\n  <form [formGroup]=\"formOptions\" (ngSubmit)=\"onSubmit()\" [ngStyle]=\"formStyle\" style=\"background-color: white; margin-top: 3%;\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title style=\"text-align: center;\">Contactez-nous via ce formulaire</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n          <mat-label>Email</mat-label>\n          <input matInput\n                 placeholder=\"Votre email\"\n                 [formControl]=\"emailControl\"\n                 autocomplete=\"email\"\n                 required>\n          <mat-error *ngIf=\"emailControl.invalid\">{{handleEmailError()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n          <mat-label>Message</mat-label>\n          <textarea matInput rows=\"15\"\n                    placeholder=\"Votre message\"\n                    [formControl]=\"messageControl\"\n                    autocomplete=\"message\"\n                    required>\n        </textarea>\n          <mat-error *ngIf=\"messageControl.invalid\">{{handleMessageError()}}</mat-error>\n        </mat-form-field>\n      </mat-card-content>\n      <mat-card-actions>\n        <button type=\"submit\" mat-raised-button class=\"button-primary-color\"> Envoyer </button>\n      </mat-card-actions>\n    </mat-card>\n  </form>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.css']\n})\nexport class MainContentComponent implements OnInit {\n  @Input() menuOpened: boolean;\n  smallScreen = false;\n  constructor(private mobileDeviceObserver: BreakpointObserver) {}\n\n  ngOnInit() {\n    this.mobileDeviceObserver\n      .observe([Breakpoints.Handset, Breakpoints.WebPortrait, Breakpoints.TabletPortrait])\n      .subscribe(res => {\n        this.smallScreen = res.matches;\n      });\n  }\n}\n","<div id=\"main\" *ngIf=\"!smallScreen\">\n  <div></div>\n  <div style=\"width: 50%;\">\n    <router-outlet></router-outlet>\n  </div>\n  <div></div>\n</div>\n\n<div *ngIf=\"smallScreen\">\n  <router-outlet></router-outlet>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {AppServices} from '../../services/AppServices';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  toolbarMenuOpened = undefined;\n  smallScreen = false;\n  @Input() mobileDeviceMenuOpened = false;\n  constructor(private router: Router, private appServices: AppServices) {\n    appServices.observeMobileDevices().subscribe(res => this.smallScreen = res.matches);\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe(value => {\n      if (value instanceof NavigationEnd) {\n        this.toolbarMenuOpened = false;\n      }\n    });\n  }\n\n  onMenuToggle() {\n    this.mobileDeviceMenuOpened = !this.mobileDeviceMenuOpened;\n    this.appServices.openMenuForMobileDevices(this.mobileDeviceMenuOpened);\n  }\n\n}\n","<mat-toolbar class=\"header-styles\">\n  <mat-toolbar-row class=\"header-content-alignment\" *ngIf=\"!smallScreen\">\n    <div></div>\n    <div style=\"width: 50%; display: flex; flex: auto;\">\n      <a mat-button routerLink=\"/\">\n        <h1>Afropreneur Digital</h1>\n      </a>\n      <div style=\"width: 70%; text-align: right;\">\n        <a mat-button routerLink=\"/articles\"\n           routerLinkActive=\"link-active\"\n           [routerLinkActiveOptions]=\"{exact: true}\">\n          Articles\n        </a>\n        <a mat-button routerLink=\"/infos\"\n           routerLinkActive=\"link-active\"\n           [routerLinkActiveOptions]=\"{exact: true}\">\n          A propos\n        </a>\n        <a mat-button routerLink=\"/contact\"\n           routerLinkActive=\"link-active\"\n           [routerLinkActiveOptions]=\"{exact: true}\">\n          Contact\n        </a>\n      </div>\n    </div>\n    <div></div>\n  </mat-toolbar-row>\n  <mat-toolbar-row *ngIf=\"smallScreen\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\" (click)=\"onMenuToggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <a mat-button routerLink=\"/\">\n      <h1>Afropreneur Digital</h1>\n    </a>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationServices} from '../../services/AuthenticationServices';\nimport {User} from '../../model/User';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  switchToAdminDashboard = false;\n  user: User;\n  constructor(\n    private authenticationServices: AuthenticationServices,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authenticationServices\n      .getAuthServiceMessage()\n      .subscribe(canSwitch => {\n        this.switchToAdminDashboard = canSwitch;\n        this.user = this.authenticationServices.getAdmin();\n      });\n  }\n\n  onDisconnect() {\n    this.authenticationServices.logout();\n    // this.router.navigate(['/admin']).then(r => console.log(r));\n  }\n\n}\n","<div *ngIf=\"!switchToAdminDashboard\">\n  <mat-list class=\"blog-left-menu-content\">\n    <div class=\"logo\">\n      <a mat-button routerLink=\"/\"><h2>Afropreneur <span style=\"color: orange;\">Digital</span></h2></a>\n    </div>\n    <div mat-subheader class=\"blog-left-menu-subheader\">Le blog</div>\n    <mat-list-item routerLink=\"/articles\" routerLinkActive=\"link-active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <mat-icon mat-list-icon>home</mat-icon>\n      <div mat-line> Accueil </div>\n    </mat-list-item>\n    <mat-list-item routerLink=\"/infos\" routerLinkActive=\"link-active\">\n      <mat-icon mat-list-icon>info</mat-icon>\n      <div mat-line> A propos </div>\n    </mat-list-item>\n    <div mat-subheader class=\"blog-left-menu-subheader\">Les thématiques </div>\n    <mat-list-item [routerLink]=\"['/articles', 'education']\"\n                   routerLinkActive=\"link-active\"\n                   [routerLinkActiveOptions]=\"{exact: true}\">\n      <mat-icon mat-list-icon>school</mat-icon>\n      <div mat-line>Education</div>\n    </mat-list-item>\n    <mat-list-item [routerLink]=\"['/articles', 'healthcare']\"\n                   routerLinkActive=\"link-active\"\n                   [routerLinkActiveOptions]=\"{exact: true}\">\n      <mat-icon mat-list-icon>local_hospital</mat-icon>\n      <div mat-line>Santé</div>\n    </mat-list-item>\n    <mat-list-item [routerLink]=\"['/articles', 'fintech']\"\n                   routerLinkActive=\"link-active\"\n                   [routerLinkActiveOptions]=\"{exact: true}\">\n      <mat-icon mat-list-icon>trending_up</mat-icon>\n      <div mat-line>FinTech</div>\n    </mat-list-item>\n  </mat-list>\n</div>\n\n<div *ngIf=\"switchToAdminDashboard\">\n  <mat-list class=\"blog-left-menu-content\">\n    <div class=\"logo\">\n      <a mat-button routerLink=\"/admin\"><h2>Afropreneur <span style=\"color: orange;\">Digital</span></h2></a>\n    </div>\n    <div mat-subheader class=\"blog-left-menu-subheader\">Console d'administration</div>\n    <mat-list-item routerLink=\"/admin/articles/add\" routerLinkActive=\"link-active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <mat-icon mat-list-icon>article</mat-icon>\n      <div mat-line> Nouvel article </div>\n    </mat-list-item>\n    <mat-list-item routerLink=\"/admin/articles\" routerLinkActive=\"link-active\" [routerLinkActiveOptions]=\"{exact: true}\">\n      <mat-icon mat-list-icon>update</mat-icon>\n      <div mat-line> Modifier article </div>\n    </mat-list-item>\n  </mat-list>\n\n  <ul class=\"admin-page-user-infos\">\n    <li>{{user.fullName}}</li>\n    <li>\n      <a mat-button (click)=\"onDisconnect()\">Déconnexion</a>\n    </li>\n  </ul>\n</div>\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {getMatIconFailedToSanitizeLiteralError} from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServices {\n  private openAdminConsoleSubject = new Subject<any>();\n  private mobileDevicesMenuSubject = new Subject<boolean>();\n\n  constructor(\n    private mobileDeviceObserver: BreakpointObserver,\n    private phoneObserver: BreakpointObserver,\n    private tabletObserver: BreakpointObserver,\n    private webLandscapeObserver: BreakpointObserver) {}\n\n  getOpenAdminConsoleSubjectObserver(): Observable<any> {\n    return this.openAdminConsoleSubject.asObservable();\n  }\n  enableAdminConsole(enable: boolean) {\n    this.openAdminConsoleSubject.next(enable);\n  }\n\n  getMobileDevicesMenuObserver(): Observable<boolean> {\n    return this.mobileDevicesMenuSubject.asObservable();\n  }\n\n  openMenuForMobileDevices(opened: boolean) {\n    this.mobileDevicesMenuSubject.next(opened);\n  }\n\n  observeMobileDevices() {\n    return this.mobileDeviceObserver.observe([Breakpoints.Handset, Breakpoints.Tablet, Breakpoints.WebPortrait]);\n  }\n\n  observePhone() {\n    return this.phoneObserver.observe([Breakpoints.Handset]);\n  }\n\n  observeTablet() {\n    return this.tabletObserver.observe([Breakpoints.Tablet, Breakpoints.WebPortrait]);\n  }\n\n  observeWebLandscape() {\n    return this.webLandscapeObserver.observe([Breakpoints.WebLandscape]);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport * as fromArticles from './articles.json';\nimport {Article} from '../model/Article';\nimport {Topics} from '../enums/ArticlesTopics';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticlesServices {\n  articles: Article[];\n  private API_ARTICLE_URL = 'http://localhost:8080/api/v1/articles';\n\n  constructor(private http: HttpClient) {}\n\n  findAll() {\n    if (this.articles !== null && this.articles !== undefined && this.articles.length > 0) {\n      return this.articles;\n    }\n    this.articles = fromArticles[Object.keys(fromArticles).shift()] as Article[];\n    /*this.http\n        .get(this.API_ARTICLE_URL)\n        .subscribe( response => {\n          console.log('ok');\n        }); */\n    return this.articles;\n  }\n  sortArticlesByDateAscending(articles: Article[]) {\n    articles = articles.sort((a, b) => {\n      const da = Date.parse(a.releaseDate);\n      const db = Date.parse(b.releaseDate);\n      return da - db;\n    });\n    return articles;\n  }\n\n  sortArticlesByDateDescending(articles: Article[]) {\n    articles = articles.sort((a, b) => {\n      const da = Date.parse(a.releaseDate);\n      const db = Date.parse(b.releaseDate);\n      return db - da;\n    });\n    return articles;\n  }\n\n  findArticleById(id: number): Article {\n    return this.findAll().find(article => article.id === id);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../model/User';\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {ResponseEntity} from '../model/ResponseEntity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationServices {\n  private admin: User;\n  private authServiceMessage = new Subject<any>();\n  private loggedIn = false;\n  private BASE_URL = 'http://localhost:8080/api/v1/authors/';\n\n  constructor(private http: HttpClient) {}\n\n  login(login: string, password: string): Observable<ResponseEntity> {\n    return this.http.get<ResponseEntity>(this.BASE_URL + login + '/' + password);\n  }\n\n  logout() {\n    this.loggedIn = false;\n    this.admin = null;\n  }\n\n  getAdmin(): User {\n    return this.admin;\n  }\n\n  setAdmin(newAdmin: User) {\n    this.admin = newAdmin;\n  }\n\n  switchToAdminConsole(canSwitch: boolean) {\n    this.authServiceMessage.next(canSwitch);\n  }\n\n  getAuthServiceMessage(): Observable<any> {\n    return this.authServiceMessage.asObservable();\n  }\n\n  connected(): boolean {\n    return this.loggedIn;\n  }\n\n  setLoggedIn(logged: boolean) {\n    this.loggedIn = logged;\n  }\n}\n","import {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\nimport {AuthenticationServices} from './AuthenticationServices';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateAdmin implements CanActivate {\n  constructor(private authenticationServices: AuthenticationServices) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    console.log(this.authenticationServices.connected());\n    return this.authenticationServices.connected();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}